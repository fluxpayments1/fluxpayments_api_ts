import type { Handler } from "gensync";
import type { ConfigFile, IgnoreFile, RelativeConfig, FilePackageData } from "./types.ts";
import type { CallerMetadata } from "../validation/options.ts";
export type { ConfigFile, IgnoreFile, RelativeConfig, FilePackageData };
export declare function findConfigUpwards(rootDir: string): string | null;
export declare function findPackageData(filepath: string): Handler<FilePackageData>;
export declare function findRelativeConfig(pkgData: FilePackageData, envName: string, caller: CallerMetadata | undefined): Handler<RelativeConfig>;
export declare function findRootConfig(dirname: string, envName: string, caller: CallerMetadata | undefined): Handler<ConfigFile | null>;
export declare function loadConfig(name: string, dirname: string, envName: string, caller: CallerMetadata | undefined): Handler<ConfigFile>;
export declare function resolveShowConfigPath(dirname: string): Handler<string | null>;
export declare const ROOT_CONFIG_FILENAMES: string[];
export declare function resolvePlugin(name: string, dirname: string): string | null;
export declare function resolvePreset(name: string, dirname: string): string | null;
export declare function loadPlugin(name: string, dirname: string): Handler<{
    filepath: string;
    value: unknown;
}>;
export declare function loadPreset(name: string, dirname: string): Handler<{
    filepath: string;
    value: unknown;
}>;
