"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolvePreset = exports.resolvePlugin = exports.loadPreset = exports.loadPlugin = exports.ROOT_CONFIG_FILENAMES = exports.resolveShowConfigPath = exports.loadConfig = exports.findRootConfig = exports.findRelativeConfig = exports.findConfigUpwards = exports.findPackageData = void 0;
// Kind of gross, but essentially asserting that the exports of this module are the same as the
// exports of index-browser, since this file may be replaced at bundle time with index-browser.
({});
var package_ts_1 = require("./package.ts");
Object.defineProperty(exports, "findPackageData", { enumerable: true, get: function () { return package_ts_1.findPackageData; } });
var configuration_ts_1 = require("./configuration.ts");
Object.defineProperty(exports, "findConfigUpwards", { enumerable: true, get: function () { return configuration_ts_1.findConfigUpwards; } });
Object.defineProperty(exports, "findRelativeConfig", { enumerable: true, get: function () { return configuration_ts_1.findRelativeConfig; } });
Object.defineProperty(exports, "findRootConfig", { enumerable: true, get: function () { return configuration_ts_1.findRootConfig; } });
Object.defineProperty(exports, "loadConfig", { enumerable: true, get: function () { return configuration_ts_1.loadConfig; } });
Object.defineProperty(exports, "resolveShowConfigPath", { enumerable: true, get: function () { return configuration_ts_1.resolveShowConfigPath; } });
Object.defineProperty(exports, "ROOT_CONFIG_FILENAMES", { enumerable: true, get: function () { return configuration_ts_1.ROOT_CONFIG_FILENAMES; } });
var plugins_ts_1 = require("./plugins.ts");
Object.defineProperty(exports, "loadPlugin", { enumerable: true, get: function () { return plugins_ts_1.loadPlugin; } });
Object.defineProperty(exports, "loadPreset", { enumerable: true, get: function () { return plugins_ts_1.loadPreset; } });
Object.defineProperty(exports, "resolvePlugin", { enumerable: true, get: function () { return plugins_ts_1.resolvePlugin; } });
Object.defineProperty(exports, "resolvePreset", { enumerable: true, get: function () { return plugins_ts_1.resolvePreset; } });
//# sourceMappingURL=index.js.map